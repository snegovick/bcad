variables:
  GIT_STRATEGY: none

build-bcad:
  stage: build
  image: ubuntu:focal-20210609
  tags:
    - amd64

  before_script:
    - apt-get update
    - DEBIAN_FRONTEND=noninteractive apt-get install -yq build-essential file git wget curl
    - if [ -d "${CI_PROJECT_DIR}" ]; then rm -rf "${CI_PROJECT_DIR}"; fi  # step 1: recreate project directory
    - mkdir -p "${CI_PROJECT_DIR}"
    - cd "${CI_PROJECT_DIR}"
    - mkdir -p ~/.ssh # step 2 : set up ssh environment
    - cat $deploy_id | base64 --decode > ~/.ssh/id_rsa
    - echo "$deploy_id"
    - echo "$CI_REGISTRY"
    - ls -lah $deploy_id
    - chmod 600 ~/.ssh/ -R
    - eval "$(ssh-agent -s)"
    - md5sum ~/.ssh/id_rsa
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H "${CI_SERVER_HOST}" >> ~/.ssh/known_hosts
    - git init # step 3 : fetch
    - git remote add origin ssh://git@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git
    - git fetch origin "${CI_COMMIT_SHA}" --depth 100
    - git reset --hard FETCH_HEAD
    - git fetch --tags

  script:
    - make build-appimage
    - |
      BRANCH=""
      if [ "$CI_COMMIT_BRANCH" != "$CI_DEFAULT_BRANCH" ]; then
        if [ -n "${CI_COMMIT_BRANCH}" ]; then
          BRANCH="${CI_COMMIT_BRANCH}_"
        fi
      fi
    - VERSION=$(git describe --tags)
    - echo "Uploading version $${BRANCH}bcad-x86_64-$${VERSION} from $${CURRENT_BRANCH}"
    - |
      GIT_TAG=$(git describe --tags --no-abbrev)
      curl --insecure -u droneio: --key ~/.ssh/id_rsa --pubkey ~/.ssh/id_rsa.pub -T bcad-x86_64.AppImage sftp://10.218.35.100/srv/deb-repositories/archive/drone/bcad/$${BRANCH}bcad-x86_64-$${VERSION}.AppImage

stages:
  - build
